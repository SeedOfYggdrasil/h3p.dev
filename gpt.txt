## WEBSITE CODEBASE ##

### FILE-STRUCTURE ###

    /root/
      img/
        bg.jpg
        flyer1.jpg
        flyer2.jpg
        flyer3.jpg
      imageModal.js
      index.html
      style.css

### FILES ###

#### index.html ####

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta name="description" content="The official website of Henchman 3 Productions, an electronic music promotional group and event coordinator based in Central Ohio.">
    <eta name="keywords" content="Ohio, DJ, Techno, EDM, House Music, Central Ohio, Shows, Gigs, Entertainment, Nightlife, Columbus, Canton, Toledo, Cleveland, Cincinnati, OH">
    <meta name="author" content="Alex Pariah">
    <title>Home | H3P</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css'>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="resize.css">
</head>
<body>
    <!-- Header Section -->
    <section id="header" class="header">
        <div class="hero">
            <img src="img/logo.png"></img>
            <p class="hero-text">HENCHMAN
                <span class="hero-text-accent">3</span>
            PRODUCTIONS</p>
            <a href="index.html#events" class="btn">VIEW SHOWS</a>
        </div>
    </section>

    <!-- Events Section -->
    <section id="events" class="events">
        <h2>UPCOMING SHOWS</h2>

        <div class="flyers">
            <img src="img/flyer1.jpg" class="flyer"></img>
            <img src="img/flyer2.jpg" class="flyer"></img>
            <img src="img/flyer3.jpg" class="flyer"></img>
        </div>

        <!-- Modal -->
        <div id="imageModal" class="modal">
            <span class="close">&times;</span>
            <img class="modal-content" id="modalImage">
        </div>
    </section>

    <!-- Footer Section -->
    <section id="footer" class="footer">
        <div class="social">
            <a href="index.html#" target="_blank"><i class="fab fa-tiktok fa-3x"></i></a>
            <a href="https://facebook.com/henchman3" target="_blank"><i class="fab fa-facebook fa-3x"></i></a>
            <a href="index.html#" target="_blank"><i class="fab fa-instagram fa-3x"></i></a>
        </div>
        <p>Copyright &copy; 2025 Henchman 3 Productions</p>
    </section>

    <!-- Scripts -->
    <script src="imageModal.js"></script>

</body>
</html>


#### style.css ####

@import url('https://fonts.googleapis.com/css2?family=Archivo+Black&family=Archivo:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');

:root {
	--primary-color: white;
	--green: rgb(0, 252, 0);
	--purple: rgba(255, 112, 175, 0.4);
}

html {
	box-sizing: border-box;
}

*,
*:before,
*:after {
	box-sizing: inherit;
}

html,
body {
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
}

body {
	background: #000 url('img/bg.jpg') no-repeat center center/cover;
	font-family: 'Roboto', sans-serif;
	line-height: 1.5;
	color: #fff;
}

a {
	text-decoration: none;
	color: var(--primary-color);
}

.header {
	height: 100vh;
	display: flex;
	align-items: center;
	justify-content: center;
	text-align: center;
	color: #fff;
	padding: 0 20px;
}

.hero {
	z-index: 2;
}

.hero img {
	max-width: 200px;
	height: auto;
	margin: 0 10px;
}

.hero-text {
	left: 20px;
	margin: 10px;
	padding: 0;
	color: #fff;
	font-family: 'Archivo Black', 'Archivo', sans-serif;
	font-size: 24px;
	line-height: 1.2;
	font-weight: 300;
	text-shadow: 0px 1px 3px #000, 0px -4px 2px rgb(3, 131, 146),
		4px 2px 2px rgb(163, 0, 233), 2px 0px 1px #000, 1px 0px 1px #161616,
		-4px 2px 2px #00f234, 0px 0px 4px #fff, 0px 4px 10px #000;
}

.hero-text-accent {
	margin: 5px;
	font-family: 'Archivo Black', 'Archivo', sans-serif;
	font-size: 24px;
	font-weight: 300;
	color: white;
	text-shadow: 0px 1px 3px #fff, 1px 0px 1px #ebebeb, 0px 2px 1px #000,
		0px -2px 1px #000, 0px 5px 5px #0091ff, 5px 0px 5px #ff0066,
		-5px 0px 5px #ff0000, 0px 2px 10px #fff;
}

.hero a {
	display: inline-block;
	padding: 10px 30px;
	background: var(--purple);
	color: var(--green);
	font-family: Roboto, sans-serif;
	font-weight: 500;
	letter-spacing: 2px;
	border-radius: 2.5px;
	border: solid magenta 2px;
	margin-top: 25px;
	opacity: 1;
	transition: all 0.3s ease;
}

.hero a:hover,
.hero a:focus {
	transform: scale(0.95);
	opacity: 1;
	background: rgba(255,0,159,0.5);
}

#events {
	text-align: center;
	padding: 40px;
	height: 100vh;
	width: 100%;
	display: flex;
	flex-direction: column;
	flex-wrap: wrap;
	padding-bottom: 50px;
}

#events h2 {
	font-size: 18px;
	color: var(--primary-color);
}

.flyers {
	display: block;
	align-items: center;
	width: 100%;
	height: auto;
	margin: 10px;
	padding: 10px;
}

.flyers img {
	max-width: 400px;
	max-height: 300px;
	width: 100%;
	height: auto;
}

.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

.modal.show {
    display: flex;
    opacity: 1;
}

.modal-content {
    max-width: 90vw;
    max-height: 90vh;
    cursor: grab;
}

.footer {
	display: flex;
	flex-direction: column;
	width: 100%;
	justify-content: center;
	align-items: center;
	text-align: center;
	margin-bottom: 30px;
	padding-bottom: 30px;
	height: 50px;
}
.footer p {
	font-family: 'Roboto', sans-serif;
	font-size: 14px;
	color: rgba(255, 255, 255, 0.8);
	font-weight: 200;
	letter-spacing: 4px;
}

.footer .social {
	display: flex;
	flex-direction: row;
	height: auto;
	width: 100%;
	justify-content: center;
	align-items: center;
	text-align: center;
	gap: 30px;
	margin: 20px;
	padding: 10px;
}

.footer .social a {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	text-align: center;
	align-items: center;
	padding: 10px;
	margin: 20px;
	color: #fff;
}

/* Responsiveness */
@media screen and (min-width: 1200px) {
	.hero img {
		width: 250px;
		height: auto;
	}

	.hero {
		font-size: 32px;
		width: 100%;
	}

	#events h2 {
		font-size: 32px;
	}

	.flyers {
		display: inline-block;
		align-items: center;
		width: 100%;
		padding: 20px;
	}

	.flyers img {
		max-width: 400px;
		max-height: 300px;
		height: auto;
		width: 100%;
		margin: 20px 0;
		padding: 10px;
	}

	.footer {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		padding: 10px;
		margin-bottom: 30px;
		padding-bottom: 30px;
		text-align: center;
		width: 100%;
		height: 50px;
	}

	.footer p {
		padding: 20px;
		margin: 0 auto;
	}

	.footer .social {
		display: flex;
		flex-direction: row;
		justify-content: center;
		align-items: center;
		text-align: center;
		width: 100%;
		margin: 20px;
		padding: 10px;
	}
}

@media screen and (min-width: 2440px) {
	.flyers {
		gap: 40px;
	}

	.flyers img {
		max-width: 40%;
	}
}


#### imageModal.js ####

document.addEventListener("DOMContentLoaded", () => {
    const modal = document.getElementById("imageModal");
    const modalImg = document.getElementById("modalImage");

    let isDragging = false, startX, startY, offsetX = 0, offsetY = 0;
    let scale = 1, startDistance = 0;

    // Open modal with fade-in effect
    document.querySelectorAll(".zoomable").forEach(img => {
        img.addEventListener("click", () => {
            modalImg.src = img.dataset.src;
            modal.style.display = "flex";
            setTimeout(() => modal.classList.add("show"), 10);
            history.pushState({ modalOpen: true }, ""); // Push state for mobile back button
        });
    });

    // Close modal function
    function closeModal() {
        modal.classList.remove("show");
        setTimeout(() => modal.style.display = "none", 300);
        resetZoomAndPosition();
        history.back(); // Go back in history when modal closes
    }

    // Click outside image to close modal
    modal.addEventListener("click", (event) => {
        if (event.target === modal) {
            closeModal();
        }
    });

    // Press "Esc" to close modal (desktop)
    document.addEventListener("keydown", (event) => {
        if (event.key === "Escape") {
            closeModal();
        }
    });

    // Handle browser back button (mobile)
    window.addEventListener("popstate", (event) => {
        if (event.state && event.state.modalOpen) {
            closeModal();
        }
    });

    // Mouse Wheel Zoom (Desktop)
    modalImg.addEventListener("wheel", (event) => {
        event.preventDefault();
        scale += event.deltaY * -0.0015;
        scale = Math.min(Math.max(1, scale), 3);
        applyTransform();
    });

    // Touch Zoom (Mobile Pinch Gesture)
    modalImg.addEventListener("touchstart", (event) => {
        if (event.touches.length === 2) {
            startDistance = getDistance(event.touches);
        } else if (event.touches.length === 1) {
            isDragging = true;
            startX = event.touches[0].clientX - offsetX;
            startY = event.touches[0].clientY - offsetY;
        }
    });

    modalImg.addEventListener("touchmove", (event) => {
        event.preventDefault();
        if (event.touches.length === 2) {
            let newDistance = getDistance(event.touches);
            let zoomFactor = newDistance / startDistance;
            scale = Math.min(Math.max(1, scale * zoomFactor), 3);
            startDistance = newDistance;
            applyTransform();
        } else if (event.touches.length === 1 && isDragging) {
            offsetX = event.touches[0].clientX - startX;
            offsetY = event.touches[0].clientY - startY;
            applyTransform();
        }
    });

    modalImg.addEventListener("touchend", () => {
        isDragging = false;
    });

    // Mouse Drag (Desktop)
    modalImg.addEventListener("mousedown", (event) => {
        isDragging = true;
        startX = event.clientX - offsetX;
        startY = event.clientY - offsetY;
        modalImg.style.cursor = "grabbing";
    });

    document.addEventListener("mousemove", (event) => {
        if (!isDragging) return;
        offsetX = event.clientX - startX;
        offsetY = event.clientY - startY;
        applyTransform();
    });

    document.addEventListener("mouseup", () => {
        isDragging = false;
        modalImg.style.cursor = "grab";
    });

    // Reset Zoom & Position when closing modal
    function resetZoomAndPosition() {
        scale = 1;
        offsetX = 0;
        offsetY = 0;
        applyTransform();
    }

    // Apply zoom and position transformation
    function applyTransform() {
        modalImg.style.transform = `scale(${scale}) translate(${offsetX}px, ${offsetY}px)`;
    }

    // Calculate distance between two touch points (for pinch zoom)
    function getDistance(touches) {
        let dx = touches[0].clientX - touches[1].clientX;
        let dy = touches[0].clientY - touches[1].clientY;
        return Math.sqrt(dx * dx + dy * dy);
    }
});
